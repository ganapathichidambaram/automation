name: Image Update Workflow

permissions:
  issues: write
  actions: write
  contents: write

on:
  issue_comment:
    types: [created]

jobs:
  image_update:
    if: contains(github.event.issue.labels.*.name, 'image-update')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Check if Comment is Approval
        if: startsWith(github.event.comment.body, '/approve')
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const issue = context.payload.issue;

            const issueBody = issue.body;
            const imageList = issueBody
            .split('\n')  // Split body into lines
            .map(line => line.trim())  // Trim whitespace
            .filter(line => line.length > 0 && /^[a-zA-Z0-9_\-\/]+:[a-zA-Z0-9_\-\.]+$/.test(line));  // Match 'name:tag' format


            // Log the image list to check it
            console.log("Image List:", imageList);
            imageList.forEach(imageTag => {
            console.log(`Processing image: ${imageTag}`);
              try {
                console.log(`Checking image: ${imageTag}`);
                const result = exec(`skopeo inspect --format='{{index .RepoDigests 0}}' docker://$${imageTag}`);
                console.log(`SHA ID for ${imageTag}:`, result.toString());
              } catch (error) {
                console.log(`Image ${imageTag} does not exist.`);
              }
             });
